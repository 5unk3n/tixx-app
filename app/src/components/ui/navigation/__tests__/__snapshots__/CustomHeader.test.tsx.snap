// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CustomHeader should render correctly based on props renders correctly for case 1 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#000000",
            "elevation": 0,
            "paddingHorizontal": 0,
            "paddingTop": 0,
            "zIndex": 0,
          },
          {},
          {},
        ]
      }
      testID="appbar-header-root-layer"
    >
      <View
        collapsable={false}
        style={
          {
            "backgroundColor": "#000000",
            "height": 56,
            "shadowColor": "#000",
            "shadowOffset": {
              "height": 0,
              "width": 0,
            },
            "shadowOpacity": 0,
            "shadowRadius": 0,
          }
        }
        testID="appbar-header-outer-layer"
      >
        <View
          collapsable={false}
          style={
            {
              "alignItems": "center",
              "backgroundColor": "#000000",
              "flex": 1,
              "flexDirection": "row",
              "paddingBottom": undefined,
              "paddingHorizontal": 4,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": undefined,
              "shadowColor": "#000",
              "shadowOffset": {
                "height": 0,
                "width": 0,
              },
              "shadowOpacity": 0,
              "shadowRadius": 0,
            }
          }
          testID="appbar-header"
        >
          <View
            style={
              [
                {
                  "flexDirection": "row",
                },
                {
                  "alignItems": "center",
                },
                {
                  "marginLeft": 20,
                },
              ]
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "transparent",
                  "borderRadius": 20,
                  "height": 40,
                  "margin": 6,
                  "marginLeft": -3,
                  "marginRight": 5,
                  "shadowColor": "#000",
                  "shadowOffset": {
                    "height": 0,
                    "width": 0,
                  },
                  "shadowOpacity": 0,
                  "shadowRadius": 0,
                  "width": 40,
                }
              }
              testID="icon-button-container-outer-layer"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "transparent",
                    "borderColor": "rgba(147, 143, 153, 1)",
                    "borderRadius": 20,
                    "borderWidth": 0,
                    "elevation": 0,
                    "flex": 1,
                    "overflow": "hidden",
                    "shadowColor": "#000",
                    "shadowOffset": {
                      "height": 0,
                      "width": 0,
                    },
                    "shadowOpacity": 0,
                    "shadowRadius": 0,
                  }
                }
                testID="icon-button-container"
              >
                <View
                  accessibilityComponentType="button"
                  accessibilityRole="button"
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": false,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityTraits="button"
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  centered={true}
                  collapsable={false}
                  focusable={true}
                  hitSlop={
                    {
                      "bottom": 6,
                      "left": 6,
                      "right": 6,
                      "top": 6,
                    }
                  }
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    [
                      {
                        "overflow": "hidden",
                      },
                      [
                        {
                          "alignItems": "center",
                          "flexGrow": 1,
                          "justifyContent": "center",
                        },
                        {
                          "borderRadius": 20,
                        },
                      ],
                    ]
                  }
                  testID="icon-button"
                >
                  <View
                    testID="icon-arrowLeft"
                  />
                </View>
              </View>
            </View>
            <View
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                    "paddingHorizontal": 12,
                  },
                  {
                    "paddingHorizontal": 0,
                  },
                  undefined,
                ]
              }
              testID="appbar-content"
            >
              <Text
                numberOfLines={1}
                style={
                  [
                    {
                      "textAlign": "left",
                    },
                    {
                      "color": "#FFFFFF",
                      "writingDirection": "ltr",
                    },
                    [
                      {
                        "fontFamily": "Pretendard-SemiBold",
                        "fontSize": 20,
                        "fontWeight": "600",
                        "letterSpacing": -0.02,
                        "lineHeight": 28,
                      },
                      undefined,
                    ],
                  ]
                }
              >
                타이틀
              </Text>
            </View>
          </View>
          <View
            style={
              [
                {
                  "flexDirection": "row",
                },
                {
                  "marginLeft": "auto",
                },
                {
                  "marginRight": 8,
                },
              ]
            }
          />
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`CustomHeader should render correctly based on props renders correctly for case 2 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#000000",
            "elevation": 0,
            "paddingHorizontal": 0,
            "paddingTop": 0,
            "zIndex": 0,
          },
          {},
          {},
        ]
      }
      testID="appbar-header-root-layer"
    >
      <View
        collapsable={false}
        style={
          {
            "backgroundColor": "#000000",
            "height": 56,
            "shadowColor": "#000",
            "shadowOffset": {
              "height": 0,
              "width": 0,
            },
            "shadowOpacity": 0,
            "shadowRadius": 0,
          }
        }
        testID="appbar-header-outer-layer"
      >
        <View
          collapsable={false}
          style={
            {
              "alignItems": "center",
              "backgroundColor": "#000000",
              "flex": 1,
              "flexDirection": "row",
              "paddingBottom": undefined,
              "paddingHorizontal": 4,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": undefined,
              "shadowColor": "#000",
              "shadowOffset": {
                "height": 0,
                "width": 0,
              },
              "shadowOpacity": 0,
              "shadowRadius": 0,
            }
          }
          testID="appbar-header"
        >
          <View
            style={
              [
                {
                  "flexDirection": "row",
                },
                {
                  "alignItems": "center",
                },
                {
                  "marginLeft": 20,
                },
              ]
            }
          >
            <test-file-stub
              color="white"
              onPress={[Function]}
              style={
                {
                  "marginLeft": 14,
                }
              }
            />
          </View>
          <View
            style={
              [
                {
                  "flexDirection": "row",
                },
                {
                  "marginLeft": "auto",
                },
                {
                  "marginRight": 8,
                },
              ]
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "transparent",
                  "borderRadius": 20,
                  "height": 40,
                  "margin": 6,
                  "shadowColor": "#000",
                  "shadowOffset": {
                    "height": 0,
                    "width": 0,
                  },
                  "shadowOpacity": 0,
                  "shadowRadius": 0,
                  "width": 40,
                }
              }
              testID="icon-button-container-outer-layer"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "transparent",
                    "borderColor": "rgba(147, 143, 153, 1)",
                    "borderRadius": 20,
                    "borderWidth": 0,
                    "elevation": 0,
                    "flex": 1,
                    "overflow": "hidden",
                    "shadowColor": "#000",
                    "shadowOffset": {
                      "height": 0,
                      "width": 0,
                    },
                    "shadowOpacity": 0,
                    "shadowRadius": 0,
                  }
                }
                testID="icon-button-container"
              >
                <View
                  accessibilityComponentType="button"
                  accessibilityRole="button"
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": false,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityTraits="button"
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  centered={true}
                  collapsable={false}
                  focusable={true}
                  hitSlop={
                    {
                      "bottom": 6,
                      "left": 6,
                      "right": 6,
                      "top": 6,
                    }
                  }
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    [
                      {
                        "overflow": "hidden",
                      },
                      [
                        {
                          "alignItems": "center",
                          "flexGrow": 1,
                          "justifyContent": "center",
                        },
                        {
                          "borderRadius": 20,
                        },
                      ],
                    ]
                  }
                  testID="icon-button"
                >
                  <View
                    color="white"
                    size={28}
                    testID="icon-mapPinLine"
                  />
                </View>
              </View>
            </View>
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "transparent",
                  "borderRadius": 20,
                  "height": 40,
                  "margin": 6,
                  "shadowColor": "#000",
                  "shadowOffset": {
                    "height": 0,
                    "width": 0,
                  },
                  "shadowOpacity": 0,
                  "shadowRadius": 0,
                  "width": 40,
                }
              }
              testID="icon-button-container-outer-layer"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "transparent",
                    "borderColor": "rgba(147, 143, 153, 1)",
                    "borderRadius": 20,
                    "borderWidth": 0,
                    "elevation": 0,
                    "flex": 1,
                    "overflow": "hidden",
                    "shadowColor": "#000",
                    "shadowOffset": {
                      "height": 0,
                      "width": 0,
                    },
                    "shadowOpacity": 0,
                    "shadowRadius": 0,
                  }
                }
                testID="icon-button-container"
              >
                <View
                  accessibilityComponentType="button"
                  accessibilityRole="button"
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": false,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityTraits="button"
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  centered={true}
                  collapsable={false}
                  focusable={true}
                  hitSlop={
                    {
                      "bottom": 6,
                      "left": 6,
                      "right": 6,
                      "top": 6,
                    }
                  }
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    [
                      {
                        "overflow": "hidden",
                      },
                      [
                        {
                          "alignItems": "center",
                          "flexGrow": 1,
                          "justifyContent": "center",
                        },
                        {
                          "borderRadius": 20,
                        },
                      ],
                    ]
                  }
                  testID="icon-button"
                >
                  <View
                    color="white"
                    size={28}
                    testID="icon-addTicket"
                  />
                </View>
              </View>
            </View>
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "transparent",
                  "borderRadius": 20,
                  "height": 40,
                  "margin": 6,
                  "shadowColor": "#000",
                  "shadowOffset": {
                    "height": 0,
                    "width": 0,
                  },
                  "shadowOpacity": 0,
                  "shadowRadius": 0,
                  "width": 40,
                }
              }
              testID="icon-button-container-outer-layer"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "transparent",
                    "borderColor": "rgba(147, 143, 153, 1)",
                    "borderRadius": 20,
                    "borderWidth": 0,
                    "elevation": 0,
                    "flex": 1,
                    "overflow": "hidden",
                    "shadowColor": "#000",
                    "shadowOffset": {
                      "height": 0,
                      "width": 0,
                    },
                    "shadowOpacity": 0,
                    "shadowRadius": 0,
                  }
                }
                testID="icon-button-container"
              >
                <View
                  accessibilityComponentType="button"
                  accessibilityRole="button"
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": false,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityTraits="button"
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  centered={true}
                  collapsable={false}
                  focusable={true}
                  hitSlop={
                    {
                      "bottom": 6,
                      "left": 6,
                      "right": 6,
                      "top": 6,
                    }
                  }
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    [
                      {
                        "overflow": "hidden",
                      },
                      [
                        {
                          "alignItems": "center",
                          "flexGrow": 1,
                          "justifyContent": "center",
                        },
                        {
                          "borderRadius": 20,
                        },
                      ],
                    ]
                  }
                  testID="icon-button"
                >
                  <View>
                    <View
                      color="white"
                      size={28}
                      testID="icon-bell"
                    />
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`CustomHeader should render correctly based on props renders correctly for case 3 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#000000",
            "elevation": 0,
            "paddingHorizontal": 0,
            "paddingTop": 0,
            "zIndex": 0,
          },
          {},
          {},
        ]
      }
      testID="appbar-header-root-layer"
    >
      <View
        collapsable={false}
        style={
          {
            "backgroundColor": "#000000",
            "height": 56,
            "shadowColor": "#000",
            "shadowOffset": {
              "height": 0,
              "width": 0,
            },
            "shadowOpacity": 0,
            "shadowRadius": 0,
          }
        }
        testID="appbar-header-outer-layer"
      >
        <View
          collapsable={false}
          style={
            {
              "alignItems": "center",
              "backgroundColor": "#000000",
              "flex": 1,
              "flexDirection": "row",
              "paddingBottom": undefined,
              "paddingHorizontal": 4,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": undefined,
              "shadowColor": "#000",
              "shadowOffset": {
                "height": 0,
                "width": 0,
              },
              "shadowOpacity": 0,
              "shadowRadius": 0,
            }
          }
          testID="appbar-header"
        >
          <View
            style={
              [
                {
                  "flexDirection": "row",
                },
                {
                  "alignItems": "center",
                },
                {
                  "marginLeft": 20,
                },
              ]
            }
          >
            <View
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                    "paddingHorizontal": 12,
                  },
                  {
                    "paddingHorizontal": 0,
                  },
                  undefined,
                ]
              }
              testID="appbar-content"
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": false,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  [
                    false,
                    [
                      {
                        "marginRight": "auto",
                      },
                    ],
                  ]
                }
              >
                <View
                  style={
                    [
                      {
                        "flexDirection": "row",
                      },
                      {
                        "alignItems": "center",
                      },
                    ]
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      [
                        {
                          "textAlign": "left",
                        },
                        {
                          "color": "#FFFFFF",
                          "writingDirection": "ltr",
                        },
                        [
                          {
                            "fontFamily": "Pretendard-SemiBold",
                            "fontSize": 20,
                            "fontWeight": "600",
                            "letterSpacing": -0.02,
                            "lineHeight": 28,
                          },
                          undefined,
                        ],
                      ]
                    }
                  >
                    편집
                  </Text>
                  <View
                    testID="icon-arrowRight"
                  />
                </View>
              </View>
            </View>
          </View>
          <View
            style={
              [
                {
                  "flexDirection": "row",
                },
                {
                  "marginLeft": "auto",
                },
                {
                  "marginRight": 8,
                },
              ]
            }
          />
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`CustomHeader should render correctly based on props renders correctly for case 4 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "#000000",
            "elevation": 0,
            "paddingHorizontal": 0,
            "paddingTop": 0,
            "zIndex": 0,
          },
          {},
          {},
        ]
      }
      testID="appbar-header-root-layer"
    >
      <View
        collapsable={false}
        style={
          {
            "backgroundColor": "#000000",
            "height": 56,
            "shadowColor": "#000",
            "shadowOffset": {
              "height": 0,
              "width": 0,
            },
            "shadowOpacity": 0,
            "shadowRadius": 0,
          }
        }
        testID="appbar-header-outer-layer"
      >
        <View
          collapsable={false}
          style={
            {
              "alignItems": "center",
              "backgroundColor": "#000000",
              "flex": 1,
              "flexDirection": "row",
              "paddingBottom": undefined,
              "paddingHorizontal": 4,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": undefined,
              "shadowColor": "#000",
              "shadowOffset": {
                "height": 0,
                "width": 0,
              },
              "shadowOpacity": 0,
              "shadowRadius": 0,
            }
          }
          testID="appbar-header"
        >
          <View
            style={
              [
                {
                  "flexDirection": "row",
                },
                {
                  "alignItems": "center",
                },
                {
                  "marginLeft": 20,
                },
              ]
            }
          >
            <View
              pointerEvents="box-none"
              style={
                [
                  {
                    "flex": 1,
                    "paddingHorizontal": 12,
                  },
                  {
                    "paddingHorizontal": 0,
                  },
                  undefined,
                ]
              }
              testID="appbar-content"
            >
              <Text
                numberOfLines={1}
                style={
                  [
                    {
                      "textAlign": "left",
                    },
                    {
                      "color": "#FFFFFF",
                      "writingDirection": "ltr",
                    },
                    [
                      {
                        "fontFamily": "Pretendard-SemiBold",
                        "fontSize": 20,
                        "fontWeight": "600",
                        "letterSpacing": -0.02,
                        "lineHeight": 28,
                      },
                      undefined,
                    ],
                  ]
                }
              >
                설정
              </Text>
            </View>
          </View>
          <View
            style={
              [
                {
                  "flexDirection": "row",
                },
                {
                  "marginLeft": "auto",
                },
                {
                  "marginRight": 8,
                },
              ]
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "transparent",
                  "borderRadius": 20,
                  "height": 40,
                  "margin": 6,
                  "shadowColor": "#000",
                  "shadowOffset": {
                    "height": 0,
                    "width": 0,
                  },
                  "shadowOpacity": 0,
                  "shadowRadius": 0,
                  "width": 40,
                }
              }
              testID="icon-button-container-outer-layer"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "transparent",
                    "borderColor": "rgba(147, 143, 153, 1)",
                    "borderRadius": 20,
                    "borderWidth": 0,
                    "elevation": 0,
                    "flex": 1,
                    "overflow": "hidden",
                    "shadowColor": "#000",
                    "shadowOffset": {
                      "height": 0,
                      "width": 0,
                    },
                    "shadowOpacity": 0,
                    "shadowRadius": 0,
                  }
                }
                testID="icon-button-container"
              >
                <View
                  accessibilityComponentType="button"
                  accessibilityRole="button"
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": false,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityTraits="button"
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  centered={true}
                  collapsable={false}
                  focusable={true}
                  hitSlop={
                    {
                      "bottom": 6,
                      "left": 6,
                      "right": 6,
                      "top": 6,
                    }
                  }
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    [
                      {
                        "overflow": "hidden",
                      },
                      [
                        {
                          "alignItems": "center",
                          "flexGrow": 1,
                          "justifyContent": "center",
                        },
                        {
                          "borderRadius": 20,
                        },
                      ],
                    ]
                  }
                  testID="icon-button"
                >
                  <View
                    fill="red"
                    testID="icon-settings"
                  />
                </View>
              </View>
            </View>
            <View
              collapsable={false}
              style={
                {
                  "alignSelf": "flex-start",
                  "backgroundColor": "transparent",
                  "borderRadius": 8,
                  "height": 32,
                  "marginRight": 4,
                  "shadowColor": "#000",
                  "shadowOffset": {
                    "height": 0,
                    "width": 0,
                  },
                  "shadowOpacity": 0,
                  "shadowRadius": 0,
                }
              }
              testID="button-container-outer-layer"
            >
              <View
                collapsable={false}
                style={
                  {
                    "backgroundColor": "transparent",
                    "borderColor": "transparent",
                    "borderRadius": 8,
                    "borderStyle": "solid",
                    "borderWidth": 0,
                    "flex": 1,
                    "minWidth": 0,
                    "shadowColor": "#000",
                    "shadowOffset": {
                      "height": 0,
                      "width": 0,
                    },
                    "shadowOpacity": 0,
                    "shadowRadius": 0,
                  }
                }
                testID="button-container"
              >
                <View
                  accessibilityRole="button"
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": false,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    [
                      {
                        "overflow": "hidden",
                      },
                      {
                        "borderRadius": 8,
                      },
                    ]
                  }
                  testID="button"
                >
                  <View
                    style={
                      [
                        {
                          "alignItems": "center",
                          "flexDirection": "row",
                          "justifyContent": "center",
                        },
                        {
                          "height": "100%",
                        },
                      ]
                    }
                  >
                    <Text
                      numberOfLines={1}
                      selectable={false}
                      style={
                        [
                          {
                            "textAlign": "left",
                          },
                          {
                            "color": "#FFFFFF",
                            "writingDirection": "ltr",
                          },
                          [
                            {
                              "fontFamily": "System",
                              "fontSize": 14,
                              "fontWeight": "500",
                              "letterSpacing": 0.1,
                              "lineHeight": 20,
                            },
                            [
                              {
                                "marginHorizontal": 16,
                                "marginVertical": 9,
                                "textAlign": "center",
                              },
                              false,
                              {
                                "marginHorizontal": 12,
                              },
                              undefined,
                              false,
                              {
                                "color": "#FFFFFF",
                                "fontFamily": "System",
                                "fontSize": 14,
                                "fontWeight": "500",
                                "letterSpacing": 0.1,
                                "lineHeight": 20,
                              },
                              [
                                {
                                  "marginHorizontal": 0,
                                  "marginVertical": 0,
                                },
                                [
                                  {
                                    "marginHorizontal": 12,
                                    "marginVertical": 8,
                                  },
                                  {
                                    "fontFamily": "Pretendard-Medium",
                                    "fontSize": 14,
                                    "fontWeight": "500",
                                    "letterSpacing": -0.02,
                                    "lineHeight": 16,
                                  },
                                ],
                                false,
                                undefined,
                                {
                                  "fontFamily": "Pretendard-Medium",
                                  "fontSize": 16,
                                  "fontWeight": "500",
                                  "letterSpacing": -0.02,
                                  "lineHeight": 18,
                                },
                                undefined,
                              ],
                            ],
                          ],
                        ]
                      }
                      testID="button-text"
                    >
                      common.edit
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`CustomHeader should render correctly based on props renders correctly for case 5 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      style={
        [
          {
            "backgroundColor": "transparent",
            "elevation": 0,
            "paddingHorizontal": 0,
            "paddingTop": 0,
            "zIndex": 0,
          },
          {},
          {},
        ]
      }
      testID="appbar-header-root-layer"
    >
      <View
        collapsable={false}
        style={
          {
            "backgroundColor": "transparent",
            "height": 56,
            "shadowColor": "#000",
            "shadowOffset": {
              "height": 0,
              "width": 0,
            },
            "shadowOpacity": 0,
            "shadowRadius": 0,
          }
        }
        testID="appbar-header-outer-layer"
      >
        <View
          collapsable={false}
          style={
            {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "flex": 1,
              "flexDirection": "row",
              "paddingBottom": undefined,
              "paddingHorizontal": 4,
              "paddingLeft": 0,
              "paddingRight": 0,
              "paddingTop": undefined,
              "shadowColor": "#000",
              "shadowOffset": {
                "height": 0,
                "width": 0,
              },
              "shadowOpacity": 0,
              "shadowRadius": 0,
            }
          }
          testID="appbar-header"
        >
          <View
            style={
              [
                {
                  "flexDirection": "row",
                },
                {
                  "alignItems": "center",
                },
                {
                  "marginLeft": 20,
                },
              ]
            }
          />
          <View
            style={
              [
                {
                  "flexDirection": "row",
                },
                {
                  "marginLeft": "auto",
                },
                {
                  "marginRight": 8,
                },
              ]
            }
          />
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;
