// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CustomCheckbox should reflect icon position and type renders correctly for {"iconPosition":"left","iconType":"minimal","checked":true} 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        [
          false,
          [
            {
              "flexBasis": "0%",
              "flexGrow": 1,
              "flexShrink": 1,
            },
          ],
        ]
      }
    >
      <View
        style={
          [
            {
              "flexDirection": "row",
            },
            {
              "alignItems": "center",
            },
          ]
        }
      >
        <test-file-stub
          color="#F2F862"
          height={26}
          pointerEvents="none"
          style={
            [
              {
                "marginRight": 8,
              },
            ]
          }
          width={26}
        />
        <Text
          style={
            [
              {
                "textAlign": "left",
              },
              {
                "color": "#FFFFFF",
                "writingDirection": "ltr",
              },
              [
                {
                  "fontFamily": "Pretendard-Medium",
                  "fontSize": 16,
                  "fontWeight": "500",
                  "letterSpacing": -0.02,
                  "lineHeight": 18,
                },
                [
                  {
                    "color": "#A0A2A2",
                  },
                  {
                    "flexBasis": "0%",
                    "flexGrow": 1,
                    "flexShrink": 1,
                  },
                ],
              ],
            ]
          }
        >
          옵션
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`CustomCheckbox should reflect icon position and type renders correctly for {"iconPosition":"left","iconType":"square","checked":true} 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        [
          false,
          [
            {
              "flexBasis": "0%",
              "flexGrow": 1,
              "flexShrink": 1,
            },
          ],
        ]
      }
    >
      <View
        style={
          [
            {
              "flexDirection": "row",
            },
            {
              "alignItems": "center",
            },
          ]
        }
      >
        <test-file-stub
          color="#F2F862"
          height={26}
          pointerEvents="none"
          style={
            [
              {
                "marginRight": 8,
              },
            ]
          }
          width={26}
        />
        <Text
          style={
            [
              {
                "textAlign": "left",
              },
              {
                "color": "#FFFFFF",
                "writingDirection": "ltr",
              },
              [
                {
                  "fontFamily": "Pretendard-Medium",
                  "fontSize": 16,
                  "fontWeight": "500",
                  "letterSpacing": -0.02,
                  "lineHeight": 18,
                },
                [
                  {
                    "color": "#A0A2A2",
                  },
                  {
                    "flexBasis": "0%",
                    "flexGrow": 1,
                    "flexShrink": 1,
                  },
                ],
              ],
            ]
          }
        >
          옵션
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`CustomCheckbox should reflect icon position and type renders correctly for {"iconPosition":"right","iconType":"minimal","checked":false} 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        [
          false,
          [
            {
              "flexBasis": "0%",
              "flexGrow": 1,
              "flexShrink": 1,
            },
          ],
        ]
      }
    >
      <View
        style={
          [
            {
              "flexDirection": "row-reverse",
            },
            {
              "justifyContent": "space-between",
            },
            {
              "alignItems": "center",
            },
          ]
        }
      >
        <test-file-stub
          color="#F2F862"
          height={26}
          pointerEvents="none"
          style={
            [
              {
                "marginLeft": "auto",
              },
            ]
          }
          width={26}
        />
        <Text
          style={
            [
              {
                "textAlign": "left",
              },
              {
                "color": "#FFFFFF",
                "writingDirection": "ltr",
              },
              [
                {
                  "fontFamily": "Pretendard-Medium",
                  "fontSize": 16,
                  "fontWeight": "500",
                  "letterSpacing": -0.02,
                  "lineHeight": 18,
                },
                [
                  {
                    "color": "#A0A2A2",
                  },
                  {
                    "flexBasis": "0%",
                    "flexGrow": 1,
                    "flexShrink": 1,
                  },
                ],
              ],
            ]
          }
        >
          옵션
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`CustomCheckbox should reflect icon position and type renders correctly for {"iconPosition":"right","iconType":"square","checked":false} 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        [
          false,
          [
            {
              "flexBasis": "0%",
              "flexGrow": 1,
              "flexShrink": 1,
            },
          ],
        ]
      }
    >
      <View
        style={
          [
            {
              "flexDirection": "row-reverse",
            },
            {
              "justifyContent": "space-between",
            },
            {
              "alignItems": "center",
            },
          ]
        }
      >
        <test-file-stub
          color="#F2F862"
          height={26}
          pointerEvents="none"
          style={
            [
              {
                "marginLeft": "auto",
              },
            ]
          }
          width={26}
        />
        <Text
          style={
            [
              {
                "textAlign": "left",
              },
              {
                "color": "#FFFFFF",
                "writingDirection": "ltr",
              },
              [
                {
                  "fontFamily": "Pretendard-Medium",
                  "fontSize": 16,
                  "fontWeight": "500",
                  "letterSpacing": -0.02,
                  "lineHeight": 18,
                },
                [
                  {
                    "color": "#A0A2A2",
                  },
                  {
                    "flexBasis": "0%",
                    "flexGrow": 1,
                    "flexShrink": 1,
                  },
                ],
              ],
            ]
          }
        >
          옵션
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;
