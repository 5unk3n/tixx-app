// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CustomRadioButton should render correctly based on props renders correctly for value 'a' with iconType 'minimal' 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": false,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          [
            false,
            undefined,
          ]
        }
      >
        <View
          style={
            [
              {
                "flexDirection": "row",
              },
              {
                "paddingLeft": 28,
                "paddingRight": 28,
              },
              {
                "paddingBottom": 12,
                "paddingTop": 12,
              },
            ]
          }
        >
          <Text
            style={
              [
                {
                  "textAlign": "left",
                },
                {
                  "color": "#FFFFFF",
                  "writingDirection": "ltr",
                },
                [
                  {
                    "fontFamily": "Pretendard-Medium",
                    "fontSize": 18,
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 22,
                  },
                  [
                    {
                      "flexBasis": "0%",
                      "flexGrow": 1,
                      "flexShrink": 1,
                    },
                  ],
                ],
              ]
            }
          >
            옵션 a
          </Text>
          <test-file-stub
            color="#F2F862"
            height={26}
            pointerEvents="none"
            width={26}
          />
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`CustomRadioButton should render correctly based on props renders correctly for value 'b' with iconType 'minimal' 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": false,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          [
            false,
            undefined,
          ]
        }
      >
        <View
          style={
            [
              {
                "flexDirection": "row",
              },
              {
                "paddingLeft": 28,
                "paddingRight": 28,
              },
              {
                "paddingBottom": 12,
                "paddingTop": 12,
              },
            ]
          }
        >
          <Text
            style={
              [
                {
                  "textAlign": "left",
                },
                {
                  "color": "#FFFFFF",
                  "writingDirection": "ltr",
                },
                [
                  {
                    "fontFamily": "Pretendard-Medium",
                    "fontSize": 18,
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 22,
                  },
                  [
                    {
                      "flexBasis": "0%",
                      "flexGrow": 1,
                      "flexShrink": 1,
                    },
                  ],
                ],
              ]
            }
          >
            옵션 b
          </Text>
          <test-file-stub
            color="#F2F862"
            height={26}
            pointerEvents="none"
            width={26}
          />
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`CustomRadioButton should render correctly based on props renders correctly for value 'c' with iconType 'rounded' 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": false,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          [
            false,
            undefined,
          ]
        }
      >
        <View
          style={
            [
              {
                "flexDirection": "row",
              },
              {
                "paddingBottom": 4,
                "paddingLeft": 4,
                "paddingRight": 4,
                "paddingTop": 4,
              },
            ]
          }
        >
          <Text
            style={
              [
                {
                  "textAlign": "left",
                },
                {
                  "color": "#FFFFFF",
                  "writingDirection": "ltr",
                },
                [
                  {
                    "fontFamily": "Pretendard-Medium",
                    "fontSize": 18,
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 22,
                  },
                  [
                    {
                      "flexBasis": "0%",
                      "flexGrow": 1,
                      "flexShrink": 1,
                    },
                  ],
                ],
              ]
            }
          >
            옵션 c
          </Text>
          <test-file-stub
            color="#F2F862"
            height={26}
            pointerEvents="none"
            width={26}
          />
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`CustomRadioButton should render correctly based on props renders correctly for value 'd' with iconType 'rounded' 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": false,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          [
            false,
            undefined,
          ]
        }
      >
        <View
          style={
            [
              {
                "flexDirection": "row",
              },
              {
                "paddingBottom": 4,
                "paddingLeft": 4,
                "paddingRight": 4,
                "paddingTop": 4,
              },
            ]
          }
        >
          <Text
            style={
              [
                {
                  "textAlign": "left",
                },
                {
                  "color": "#FFFFFF",
                  "writingDirection": "ltr",
                },
                [
                  {
                    "fontFamily": "Pretendard-Medium",
                    "fontSize": 18,
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 22,
                  },
                  [
                    {
                      "flexBasis": "0%",
                      "flexGrow": 1,
                      "flexShrink": 1,
                    },
                  ],
                ],
              ]
            }
          >
            옵션 d
          </Text>
          <test-file-stub
            color="#F2F862"
            height={26}
            pointerEvents="none"
            width={26}
          />
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;
